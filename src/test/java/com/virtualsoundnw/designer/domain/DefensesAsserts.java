package com.virtualsoundnw.designer.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DefensesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDefensesAllPropertiesEquals(Defenses expected, Defenses actual) {
        assertDefensesAutoGeneratedPropertiesEquals(expected, actual);
        assertDefensesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDefensesAllUpdatablePropertiesEquals(Defenses expected, Defenses actual) {
        assertDefensesUpdatableFieldsEquals(expected, actual);
        assertDefensesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDefensesAutoGeneratedPropertiesEquals(Defenses expected, Defenses actual) {
        assertThat(actual)
            .as("Verify Defenses auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDefensesUpdatableFieldsEquals(Defenses expected, Defenses actual) {
        assertThat(actual)
            .as("Verify Defenses relevant properties")
            .satisfies(a -> assertThat(a.getDefense()).as("check defense").isEqualTo(expected.getDefense()))
            .satisfies(a -> assertThat(a.getdShipId()).as("check dShipId").isEqualTo(expected.getdShipId()))
            .satisfies(a -> assertThat(a.getBattery()).as("check battery").isEqualTo(expected.getBattery()))
            .satisfies(a -> assertThat(a.getCount()).as("check count").isEqualTo(expected.getCount()))
            .satisfies(a -> assertThat(a.getMass()).as("check mass").isEqualTo(expected.getMass()))
            .satisfies(a -> assertThat(a.getCost()).as("check cost").isEqualTo(expected.getCost()))
            .satisfies(a -> assertThat(a.getArmored()).as("check armored").isEqualTo(expected.getArmored()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDefensesUpdatableRelationshipsEquals(Defenses expected, Defenses actual) {
        assertThat(actual)
            .as("Verify Defenses relationships")
            .satisfies(a -> assertThat(a.getShips()).as("check ships").isEqualTo(expected.getShips()));
    }
}
