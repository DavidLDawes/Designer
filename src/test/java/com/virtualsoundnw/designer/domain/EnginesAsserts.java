package com.virtualsoundnw.designer.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnginesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnginesAllPropertiesEquals(Engines expected, Engines actual) {
        assertEnginesAutoGeneratedPropertiesEquals(expected, actual);
        assertEnginesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnginesAllUpdatablePropertiesEquals(Engines expected, Engines actual) {
        assertEnginesUpdatableFieldsEquals(expected, actual);
        assertEnginesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnginesAutoGeneratedPropertiesEquals(Engines expected, Engines actual) {
        assertThat(actual)
            .as("Verify Engines auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnginesUpdatableFieldsEquals(Engines expected, Engines actual) {
        assertThat(actual)
            .as("Verify Engines relevant properties")
            .satisfies(a -> assertThat(a.geteShipId()).as("check eShipId").isEqualTo(expected.geteShipId()))
            .satisfies(a -> assertThat(a.getEngine()).as("check engine").isEqualTo(expected.getEngine()))
            .satisfies(a -> assertThat(a.getMass()).as("check mass").isEqualTo(expected.getMass()))
            .satisfies(a -> assertThat(a.getCost()).as("check cost").isEqualTo(expected.getCost()))
            .satisfies(a -> assertThat(a.getTl()).as("check tl").isEqualTo(expected.getTl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnginesUpdatableRelationshipsEquals(Engines expected, Engines actual) {
        assertThat(actual)
            .as("Verify Engines relationships")
            .satisfies(a -> assertThat(a.getShips()).as("check ships").isEqualTo(expected.getShips()));
    }
}
