package com.virtualsoundnw.designer.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CargoesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoesAllPropertiesEquals(Cargoes expected, Cargoes actual) {
        assertCargoesAutoGeneratedPropertiesEquals(expected, actual);
        assertCargoesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoesAllUpdatablePropertiesEquals(Cargoes expected, Cargoes actual) {
        assertCargoesUpdatableFieldsEquals(expected, actual);
        assertCargoesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoesAutoGeneratedPropertiesEquals(Cargoes expected, Cargoes actual) {
        assertThat(actual)
            .as("Verify Cargoes auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoesUpdatableFieldsEquals(Cargoes expected, Cargoes actual) {
        assertThat(actual)
            .as("Verify Cargoes relevant properties")
            .satisfies(a -> assertThat(a.getCargo()).as("check cargo").isEqualTo(expected.getCargo()))
            .satisfies(a -> assertThat(a.getcShipId()).as("check cShipId").isEqualTo(expected.getcShipId()))
            .satisfies(a -> assertThat(a.getMass()).as("check mass").isEqualTo(expected.getMass()))
            .satisfies(a -> assertThat(a.getCost()).as("check cost").isEqualTo(expected.getCost()))
            .satisfies(a -> assertThat(a.getArmored()).as("check armored").isEqualTo(expected.getArmored()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCargoesUpdatableRelationshipsEquals(Cargoes expected, Cargoes actual) {
        assertThat(actual)
            .as("Verify Cargoes relationships")
            .satisfies(a -> assertThat(a.getShips()).as("check ships").isEqualTo(expected.getShips()));
    }
}
