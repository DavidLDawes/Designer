package com.virtualsoundnw.designer.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ShipsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipsAllPropertiesEquals(Ships expected, Ships actual) {
        assertShipsAutoGeneratedPropertiesEquals(expected, actual);
        assertShipsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipsAllUpdatablePropertiesEquals(Ships expected, Ships actual) {
        assertShipsUpdatableFieldsEquals(expected, actual);
        assertShipsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipsAutoGeneratedPropertiesEquals(Ships expected, Ships actual) {
        assertThat(actual)
            .as("Verify Ships auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipsUpdatableFieldsEquals(Ships expected, Ships actual) {
        assertThat(actual)
            .as("Verify Ships relevant properties")
            .satisfies(a -> assertThat(a.getShipId()).as("check shipId").isEqualTo(expected.getShipId()))
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getTl()).as("check tl").isEqualTo(expected.getTl()))
            .satisfies(a -> assertThat(a.getTonnage()).as("check tonnage").isEqualTo(expected.getTonnage()))
            .satisfies(a -> assertThat(a.getConf()).as("check conf").isEqualTo(expected.getConf()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getHull()).as("check hull").isEqualTo(expected.getHull()))
            .satisfies(a -> assertThat(a.getStructure()).as("check structure").isEqualTo(expected.getStructure()))
            .satisfies(a -> assertThat(a.getSections()).as("check sections").isEqualTo(expected.getSections()))
            .satisfies(a -> assertThat(a.getCapital()).as("check capital").isEqualTo(expected.getCapital()))
            .satisfies(a -> assertThat(a.getMilitary()).as("check military").isEqualTo(expected.getMilitary()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipsUpdatableRelationshipsEquals(Ships expected, Ships actual) {
        // empty method
    }
}
